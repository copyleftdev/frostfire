name: Rust CI/CD Pipeline

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --all-features

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Clippy check
        run: cargo clippy --all-targets --all-features -- -D warnings

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check

  # Debug job to see the context values
  debug:
    name: Debug Context
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

  benchmark:
    name: Benchmarks
    runs-on: ubuntu-latest
    # Only run benchmarks on master branch pushes, not on PRs
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Run benchmarks
        run: cargo bench
      - name: Archive benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: target/criterion/
          retention-days: 30

  publish:
    name: Publish to crates.io
    needs: [test, clippy, fmt]
    runs-on: ubuntu-latest
    # Only publish on tag pushes
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Debug ref
        run: |
          echo "Current ref: ${{ github.ref }}"
          echo "Is tag: ${{ startsWith(github.ref, 'refs/tags/v') }}"
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Check version matches tag
        run: |
          CRATE_VERSION=$(grep -m1 -oP '^version = "\K[^"]+' Cargo.toml)
          TAG_VERSION="${GITHUB_REF#refs/tags/v}"
          if [ "$CRATE_VERSION" != "$TAG_VERSION" ]; then
            echo "Error: Tag version $TAG_VERSION doesn't match crate version $CRATE_VERSION"
            exit 1
          fi
      - name: Publish crate
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
